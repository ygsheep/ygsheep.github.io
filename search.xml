<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>React-我的第一个项目</title>
    <url>/2022/10/03/React-%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个项目是我学了 Vue -&gt; React 之后学习的<br><a href="https://www.bilibili.com/video/BV1wy4y1D7JT?vd_source=26762b137eb1ea116624cc0478ea4008">【尚硅谷React教程（2022加更，B站超火react教程）】</a></p>
<p>本项目使用的工具:</p>
<ul>
<li><p>软件</p>
<ul>
<li><a href="https://code.visualstudio.com/Download">vscode</a></li>
</ul>
</li>
<li><p>vscode的插件</p>
<ul>
<li>Prettier -代码格式化工具</li>
<li>Tabnine -AI代码提示</li>
<li>css Peek -Css代码定位</li>
<li>Auto Rename Tag -标签重命名</li>
</ul>
</li>
<li><p>框架</p>
<ul>
<li>React</li>
<li>Bootstrap -Css框架</li>
</ul>
</li>
<li><p>需要掌握的</p>
<ul>
<li>JSX</li>
<li>Lcss</li>
<li>Es6</li>
<li>Ajax</li>
<li></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux问题与解决</title>
    <url>/2023/01/05/Linux%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<details class="toggle" ><summary class="toggle-button" style="">前言</summary><div class="toggle-content"><p>本文章是我在学习 Linux 所遇到的问题与解决方法</p>
</div></details>

<h1 id="Arch"><a href="#Arch" class="headerlink" title="Arch"></a>Arch</h1><h2 id="No-such-file-or-directory"><a href="#No-such-file-or-directory" class="headerlink" title="No such file or directory"></a>No such file or directory</h2><p>运行命令的时候经常出现类似:<br>  <strong>libxxx.so.xxx</strong>: cannot open shared object file: No such file or directory<br>这是因为缺少依赖等问题</p>
<p>可以在 搜索引擎搜索 <strong>Archlinux libxxx.so.xxx</strong><br><img src="/img/Linux%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E5%86%B3/Snipaste_2023-01-05_00-59-12.png"><br>在这个Arch AUR 上面可以找到依赖<br><img src="/img/Linux%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E5%86%B3/Snipaste_2023-01-05_01-00-42.png"></p>
<h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h2 id="WSL-apt无法安装软件"><a href="#WSL-apt无法安装软件" class="headerlink" title="WSL apt无法安装软件"></a>WSL apt无法安装软件</h2><p>执行sudo apt update<br>apt 无法安装软件的时候会提示<br><strong>W: Some index files failed to download. They have been ignored, or old ones used instead</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Err:1 http://security.ubuntu.com/ubuntu bionic-security InRelease</span><br><span class="line">  Temporary failure resolving &#x27;security.ubuntu.com&#x27;</span><br><span class="line">Err:2 http://archive.ubuntu.com/ubuntu bionic InRelease</span><br><span class="line">  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class="line">Err:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease</span><br><span class="line">  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class="line">Err:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease</span><br><span class="line">  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class="line">Reading package lists... Done</span><br><span class="line">W: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/bionic/InRelease  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class="line">W: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/bionic-updates/InRelease  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class="line">W: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/bionic-backports/InRelease  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class="line">W: Failed to fetch http://security.ubuntu.com/ubuntu/dists/bionic-security/InRelease  Temporary failure resolving &#x27;security.ubuntu.com&#x27;</span><br><span class="line">W: Some index files failed to download. They have been ignored, or old ones used instead.</span><br></pre></td></tr></table></figure>

<p>解决方法:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm /etc/resolv.conf</span><br><span class="line">sudo bash -c &#x27;echo &quot;nameserver 8.8.8.8&quot; &gt; /etc/resolv.conf&#x27;</span><br><span class="line">sudo bash -c &#x27;echo &quot;[network]&quot; &gt; /etc/wsl.conf&#x27;</span><br><span class="line">sudo bash -c &#x27;echo &quot;generateResolvConf = false&quot; &gt;&gt; /etc/wsl.conf&#x27;</span><br><span class="line">sudo chattr +i /etc/resolv.conf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">############################################</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/resolv.conf</span></span><br><span class="line">  nameserver 8.8.8.8</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/wsl.conf</span></span><br><span class="line">[network]</span><br><span class="line">  generateResolvConf = false</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="参考-Github上的一个issue"><a href="#参考-Github上的一个issue" class="headerlink" title="参考 Github上的一个issue"></a>参考 <a href="https://github.com/microsoft/WSL/issues/5420#issuecomment-646479747">Github上的一个issue</a></h4>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Wsl2-Linux开发C++配置</title>
    <url>/2023/01/04/Wsl2-Linux%E5%BC%80%E5%8F%91C-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<details class="toggle" ><summary class="toggle-button" style="">ArchWSL安装</summary><div class="toggle-content"><h1 id="启动win10的wsl2功能"><a href="#启动win10的wsl2功能" class="headerlink" title="启动win10的wsl2功能"></a>启动win10的wsl2功能</h1><h3 id="1、要求"><a href="#1、要求" class="headerlink" title="1、要求"></a>1、要求</h3><ul>
<li>对于 x64 系统：版本 1903 或更高，内部版本号 18362 或更高</li>
<li>对于 ARM64 系统：版本 2004 或更高，内部版本号 19041 或更高</li>
<li>对于 VMware Workstation Pro 16+ 用户：版本 2004 或更高</li>
<li>对于 Oracle VM VirtualBox 6+ 用户：版本 2004 或更高</li>
</ul>
<h3 id="2、安装-WSL-2-之前，必须启用“虚拟机平台”可选功能"><a href="#2、安装-WSL-2-之前，必须启用“虚拟机平台”可选功能" class="headerlink" title="2、安装 WSL 2 之前，必须启用“虚拟机平台”可选功能"></a>2、安装 WSL 2 之前，必须启用“虚拟机平台”可选功能</h3><p>以管理员身份打开 PowerShell 并运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br><span class="line"></span><br><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure>

<h3 id="3、下载-Linux-内核更新包"><a href="#3、下载-Linux-内核更新包" class="headerlink" title="3、下载 Linux 内核更新包"></a>3、下载 Linux 内核更新包</h3><p>下载最新包</p>
<ul>
<li>适用于 x64 计算机的 WSL 2 Linux 内核更新包<ul>
<li><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">wsl_update_x64.msi</a></li>
</ul>
</li>
<li>适用于 ARM64 计算机的 WSL 2 Linux 内核更新包<ul>
<li><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi">wsl_update_arm64.msi</a></li>
</ul>
</li>
</ul>
<p>安装更新包</p>
<h3 id="4、将-WSL-2-设置为默认版本"><a href="#4、将-WSL-2-设置为默认版本" class="headerlink" title="4、将 WSL 2 设置为默认版本"></a>4、将 WSL 2 设置为默认版本</h3><p>打开终端执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure>

<p>重新启动计算机，以完成 WSL 安装并更新到 WSL 2</p>
<h3 id="5、下载ArchWSL"><a href="#5、下载ArchWSL" class="headerlink" title="5、下载ArchWSL"></a>5、下载<a href="https://github.com/yuk7/ArchWSL">ArchWSL</a></h3><h3 id="6、完成安装后的操作"><a href="#6、完成安装后的操作" class="headerlink" title="6、完成安装后的操作"></a>6、完成安装后的操作</h3><blockquote>
<p><strong>参考</strong> <a href="https://wsldl-pg.github.io/ArchW-docs/locale/zh-CN/How-to-Setup/">ArchWSL文档</a></p>
</blockquote>
<h4 id="设置Root密码"><a href="#设置Root密码" class="headerlink" title="设置Root密码"></a>设置Root密码</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;Arch.exe</span><br><span class="line">[root@PC-NAME]<span class="comment"># passwd</span></span><br></pre></td></tr></table></figure>

<h4 id="设置默认用户"><a href="#设置默认用户" class="headerlink" title="设置默认用户"></a>设置默认用户</h4><p>参考 ArchWiki 的 <a href="https://wiki.archlinux.org/index.php/Sudo#Example_entries">Sudo</a> 和 <a href="https://wiki.archlinux.org/index.php/Users_and_groups">User and groups</a> 页。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;Arch.exe</span><br><span class="line">[root@PC-NAME]<span class="comment"># echo &quot;%wheel ALL=(ALL) ALL&quot; &gt; /etc/sudoers.d/wheel</span></span><br><span class="line">    (设置 sudoers 文件。)</span><br><span class="line"></span><br><span class="line">[root@PC-NAME]<span class="comment"># useradd -m -G wheel -s /bin/bash &#123;username&#125;</span></span><br><span class="line">(添加用户)</span><br><span class="line"></span><br><span class="line">[root@PC-NAME]<span class="comment"># passwd &#123;username&#125;</span></span><br><span class="line">(设置默认用户密码)</span><br><span class="line"></span><br><span class="line">[root@PC-NAME]<span class="comment"># exit</span></span><br><span class="line"></span><br><span class="line">&gt;Arch.exe config --default-user &#123;username&#125;</span><br><span class="line">    (设置默认用户)</span><br></pre></td></tr></table></figure>
</div></details>

<h1 id="Arch配置"><a href="#Arch配置" class="headerlink" title="Arch配置"></a>Arch配置</h1><h2 id="1、Arch-初始化"><a href="#1、Arch-初始化" class="headerlink" title="1、Arch 初始化"></a>1、Arch 初始化</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新密钥</span></span><br><span class="line"></span><br><span class="line">sudo pacman-key --init</span><br><span class="line">sudo pacman-key --populate</span><br><span class="line">sudo pacman syy archlinux-keyring</span><br><span class="line"></span><br><span class="line"><span class="comment"># 换源</span></span><br><span class="line"><span class="comment"># vim /etc/pacman.conf</span></span><br><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br><span class="line"><span class="comment"># vim /etc/pacman.d/mirrorlist</span></span><br><span class="line"><span class="comment"># 中科大</span></span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># china: https://archlinux.org/mirrorlist/?country=CN&amp;protocol=https&amp;ip_version=4</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="更换中文语言"><a href="#更换中文语言" class="headerlink" title="更换中文语言"></a>更换中文语言</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/locale.gen</span></span><br><span class="line"><span class="comment"># 找到 #zh_CM.UTF-8 把 &quot;#&quot; 删除</span></span><br><span class="line">zh_CN.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">&gt; sudo locale-gen</span><br><span class="line"></span><br><span class="line"><span class="comment"># ~/.bashrc 加入</span></span><br><span class="line"><span class="comment"># export LANG=zh_CN.UTF-8 </span></span><br><span class="line"><span class="built_in">export</span> LANGUAGE=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_ALL=<span class="string">&quot;zh_CN.UTF-8&quot;</span></span><br><span class="line"><span class="built_in">export</span> LC_CTYPE=<span class="string">&quot;zh_CN.UTF-8&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h3><p><strong>推荐安装<a href="https://archlinux.org/packages/?name=noto-fonts-cjk">noto-fonts-cjk</a></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装中文字体</span></span><br><span class="line">sudo pacman -S noto-fonts-cjk</span><br></pre></td></tr></table></figure>

<h2 id="2、安装常用软件"><a href="#2、安装常用软件" class="headerlink" title="2、安装常用软件"></a>2、安装常用软件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装最新版lib32-glibc</span></span><br><span class="line">sudo pacman -S glibc lib32-glibc</span><br><span class="line"><span class="comment"># 基本 linux 命令集</span></span><br><span class="line">sudo pacman -S base-devel</span><br><span class="line"><span class="comment"># yay</span></span><br><span class="line">sudo pacman -S yay</span><br><span class="line"><span class="comment"># yay 换源</span></span><br><span class="line">yay --aururl <span class="string">&quot;https://aur.tuna.tsinghua.edu.cn&quot;</span> --save</span><br><span class="line"><span class="comment"># 其它一些常用的指令</span></span><br><span class="line">sudo pacman -S neofetch lolcat bat tree</span><br><span class="line"><span class="comment"># git openssh man-pages</span></span><br><span class="line">sudo pacman -S git openssh man-pages</span><br><span class="line"><span class="comment"># 安装 firacode 字体</span></span><br><span class="line">sudo pacman -S nerd-fonts-fira-code</span><br><span class="line"><span class="comment"># Jetbrains Mono 字体</span></span><br><span class="line">yay -S nerd-fonts-jetbrains-mono</span><br></pre></td></tr></table></figure>

<h2 id="3、终端zsh美化"><a href="#3、终端zsh美化" class="headerlink" title="3、终端zsh美化"></a>3、终端zsh美化</h2><p><a href="https://arch.icekylin.online/advanced/beauty-3.html#_1-%E8%AE%BE%E7%BD%AE-konsole-%E6%A0%B7%E5%BC%8F">zsh美化</a></p>
<h3 id="安装-oh-my-zsh"><a href="#安装-oh-my-zsh" class="headerlink" title="安装 oh-my-zsh"></a>安装 <strong>oh-my-zsh</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yay 安装</span></span><br><span class="line">yay -S oh-my-zsh-git</span><br><span class="line"><span class="comment"># 安装在 /usr/share/oh-my-zsh</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="安装zsh插件"><a href="#安装zsh插件" class="headerlink" title="安装zsh插件"></a>安装zsh插件</h3><h2 id="copy-知乎-常用的oh-my-zsh插件"><a href="#copy-知乎-常用的oh-my-zsh插件" class="headerlink" title="copy 知乎:常用的oh-my-zsh插件"></a>copy 知乎:<a href="https://zhuanlan.zhihu.com/p/61447507">常用的oh-my-zsh插件</a></h2><p><strong>zsh-autosuggestions</strong></p>
<blockquote>
<p>会记录你之前输入过的所有命令，并且自动匹配你可能想要输入命令，然后按→补全</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换到 oh-my-zsh/plugins 目录</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions</span><br></pre></td></tr></table></figure>

<p><strong>zsh-syntax-highlighting</strong></p>
<blockquote>
<p>命令太多，有时候记不住，等输入完了才知道命令输错了，这个插件直接在输入过程中就会提示你，当前命令是否正确，错误红色，正确绿色</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换到 oh-my-zsh/plugins 目录</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting</span><br><span class="line"></span><br><span class="line"><span class="comment"># .zshrc</span></span><br><span class="line">plugins(</span><br><span class="line">  git</span><br><span class="line">  z</span><br><span class="line">  sudo</span><br><span class="line">  zsh-syntax-highlighting</span><br><span class="line">  zsh-autosuggestions</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="Linux的C-x2F-C-配置"><a href="#Linux的C-x2F-C-配置" class="headerlink" title="Linux的C&#x2F;C++配置"></a>Linux的C&#x2F;C++配置</h1><h2 id="安装调试与编译软件"><a href="#安装调试与编译软件" class="headerlink" title="安装调试与编译软件"></a>安装调试与编译软件</h2><p><a href="https://devblogs.microsoft.com/cppblog/build-and-debug-c-with-wsl-2-distributions-and-visual-studio-2022/">参考 Build and Debug C++ with WSL 2 Distributions and Visual Studio 2022</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S gcc gdb make cmake ninja rsync zip</span><br></pre></td></tr></table></figure>

<h1 id="疑惑"><a href="#疑惑" class="headerlink" title="疑惑"></a>疑惑</h1><h2 id="报错libcuda-so-1"><a href="#报错libcuda-so-1" class="headerlink" title="报错libcuda.so.1"></a>报错libcuda.so.1</h2><p>参考<a href="https://www.bilibili.com/read/cv16415980/">Windows10 通过linux子系统WSL2安装nvidia-docker</a></p>
<p><strong>&#x2F;usr&#x2F;lib&#x2F;wsl&#x2F;lib&#x2F;libcuda.so.1 is not a symbolic link</strong></p>
<blockquote>
<p>原因: &#x2F;usr&#x2F;lib&#x2F;wsl&#x2F;lib&#x2F;目录下都是文件而不是链接，且该目录只读，需要在其他目录操作</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/lib/wsl</span><br><span class="line">sudo <span class="built_in">mkdir</span> lib2</span><br><span class="line">sudo <span class="built_in">ln</span> -s lib/* lib2</span><br><span class="line"><span class="comment"># 更改wsl配置文件</span></span><br><span class="line">sudo vim /etc/ld.so.conf.d/ld.wsl.conf</span><br><span class="line"><span class="comment"># 将 /usr/lib/wsl/lib 改为 /usr/lib/wsl/lib2</span></span><br><span class="line"><span class="comment"># 测试修改是否生效</span></span><br><span class="line">sudo ldconfig</span><br><span class="line"><span class="comment"># 永久修改</span></span><br><span class="line">sudo <span class="built_in">cat</span> &gt;&gt; /etc/wsl.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[automount]</span></span><br><span class="line"><span class="string">ldconfig = fasle</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>VsCode Python代码格式化autopep8 设置2个空格悬挂缩进问题</title>
    <url>/2023/10/22/VsCode-Python%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F%E5%8C%96autopep8-%E8%AE%BE%E7%BD%AE2%E4%B8%AA%E7%A9%BA%E6%A0%BC%E6%82%AC%E6%8C%82%E7%BC%A9%E8%BF%9B%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>在vscode 设置中添加</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;[python]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ms-python.autopep8&quot;</span><span class="punctuation">,</span> <span class="comment">// 默认格式化为 autopep8</span></span><br><span class="line">    <span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="comment">// 保存自动格式化</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;autopep8.args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;--indent-size=2&quot;</span><span class="punctuation">,</span> <span class="comment">// 设置缩进为 2</span></span><br><span class="line">    <span class="string">&quot;--ignore=E121&quot;</span> </span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在vscode插件市场安装 autopep8<br>即可完成 Python 的格式化</p>
<blockquote>
<p>我试图让 autopep8 工作以正确缩进带有 2 个空格而不是 4 个空格的 Python 代码。我正在使用带有 Python 扩展的 VS Code，它使用 autopep8 进行格式化。我找到了 here可以将 autopep8 配置为使用 2 个空格</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;python.formatting.autopep8Args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;--indent-size=2&quot;</span><span class="punctuation">]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>代码并没有按照以2个空格进行缩进</p>
<p><a href="https://stackoverflow.com/questions/54430470/">Stack Overflow</a>上找到一个类似的问题</p>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux-Arch配置-平板实现编程自由</title>
    <url>/2022/10/14/Termux-Arch%E9%85%8D%E7%BD%AE-%E5%B9%B3%E6%9D%BF%E5%AE%9E%E7%8E%B0%E7%BC%96%E7%A8%8B%E8%87%AA%E7%94%B1/</url>
    <content><![CDATA[<details class="toggle" ><summary class="toggle-button" style="">前言</summary><div class="toggle-content"><p>最开始接触到这个软件，很惊讶，竟然能在手机上运行Linux，以前的时候还很难用，</p>
<p>现在是可以成为生产力了。</p>
<p>主要还是手上有一台平板，在termux中装了个Arch，窗口用的 i3。</p>
</div></details>

<h1 id="1、Termux-简介"><a href="#1、Termux-简介" class="headerlink" title="1、Termux 简介"></a>1、Termux 简介</h1><p><strong>文档相关</strong></p>
<ul>
<li><a href="https://termux.com/">Termux 官网</a></li>
<li><a href="https://github.com/termux/termux-app">Github 项目地址</a></li>
<li><a href="https://wiki.termux.com/wiki/Main_Page">官方英文 WiKi (维基) 文档</a></li>
</ul>
<p><strong>下载地址</strong></p>
<ul>
<li><a href="https://f-droid.org/packages/com.termux/">F-Droid 下载地址</a></li>
<li><a href="https://play.google.com/store/apps/details?id=com.termux">Google Play 下载地址</a></li>
<li><a href="https://www.coolapk.com/apk/com.termux">酷安 下载地址</a></li>
<li><a href="https://od.ixcmstudio.cn/repository/main/ZeroTermux/">Zerotermux推荐</a></li>
</ul>
<p>上面这个下载不了可以点击这个下载 <a href="">Zerotermux</a></p>
<p>Github: <a href="https://github.com/hanxinhao000/ZeroTermux">Zerotermux(github.com)</a> 是国内对 termux 的二改的开源项目，加入了更多功能和汉化。</p>
<h1 id="2、软件"><a href="#2、软件" class="headerlink" title="2、软件"></a>2、软件</h1><h2 id="ranger-终端文件管理器"><a href="#ranger-终端文件管理器" class="headerlink" title="ranger 终端文件管理器"></a>ranger 终端文件管理器</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Arch</span></span><br><span class="line">sudo pacman -S ranger</span><br><span class="line">sudo pacman -S w3m</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ubuntu</span></span><br><span class="line">sudo apt install ranger</span><br><span class="line">sudo apt install w3m</span><br></pre></td></tr></table></figure>

<h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成默认配置文件 ~/.config/ranger</span></span><br><span class="line">ranger --copy-config=all</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">~/.config/ranger/rc.conf 找到并改成下面这个</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用w3m预览图片</span></span><br><span class="line">set preview_image_mtehod w3m</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否开启图片预览</span></span><br><span class="line">set preview_images true</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载图标插件</span></span><br><span class="line">git clone https://github.com/cdump/ranger-devicons2 ~/.config/ranger/plugins/devicons2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在配置文件中 ~/.config/ranger/rc.conf</span></span><br><span class="line">default_linemode devicons2 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/ranger/ranger/wiki/Plugins">插件地址&#x2F;Plugins · ranger&#x2F;ranger Wiki (github.com)</a></p>
<p><img src="/img/Termux-Arch%E9%85%8D%E7%BD%AE-%E5%B9%B3%E6%9D%BF%E5%AE%9E%E7%8E%B0%E7%BC%96%E7%A8%8B%E8%87%AA%E7%94%B1.assets/image-20221015021104770-16657710704141-16657710773123.png" alt="image-20221015021104770"></p>
<p><img src="/img/Termux-Arch%E9%85%8D%E7%BD%AE-%E5%B9%B3%E6%9D%BF%E5%AE%9E%E7%8E%B0%E7%BC%96%E7%A8%8B%E8%87%AA%E7%94%B1.assets/image-20221015021328710-16657712106795.png" alt="image-20221015021328710"></p>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 配置</title>
    <url>/2022/07/30/hello-world/</url>
    <content><![CDATA[<p>欢迎来到 <a href="https://hexo.io/">Hexo</a>! 这是你的第一个文章. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="快速开始！"><a href="#快速开始！" class="headerlink" title="快速开始！"></a>快速开始！</h2><h3 id="创建新的博客"><a href="#创建新的博客" class="headerlink" title="创建新的博客"></a>创建新的博客</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>更多: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="运行博客"><a href="#运行博客" class="headerlink" title="运行博客"></a>运行博客</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>更多: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>更多: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="部署到远程网站"><a href="#部署到远程网站" class="headerlink" title="部署到远程网站"></a>部署到远程网站</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>更多: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<h2 id="文章扩展"><a href="#文章扩展" class="headerlink" title="文章扩展"></a>文章扩展</h2><h3 id="折叠信息"><a href="#折叠信息" class="headerlink" title="折叠信息"></a>折叠信息</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% hideToggle 标题,背景颜色,颜色 %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure>

<details class="toggle" ><summary class="toggle-button" style="">Butterfly安裝方法</summary><div class="toggle-content"><p>在你的博客根目錄裏</p>
<p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p>
<p>如果想要安裝比較新的dev分支，可以</p>
<p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p>
</div></details>

<h2 id="hexo问题"><a href="#hexo问题" class="headerlink" title="hexo问题"></a>hexo问题</h2><h3 id="上传到Github与本地运行不同"><a href="#上传到Github与本地运行不同" class="headerlink" title="上传到Github与本地运行不同"></a>上传到Github与本地运行不同</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>

<h3 id="Markdown图片问题"><a href="#Markdown图片问题" class="headerlink" title="Markdown图片问题"></a>Markdown图片问题</h3><p>将图片放到 themes\butterfly\source\img\ 文件夹下方</p>
<p><img src="/img/video.gif"></p>
]]></content>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>原神搭建私服</title>
    <url>/2022/07/30/%E5%8E%9F%E7%A5%9E%E7%A7%81%E6%9C%8D/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参考 <a href="https://www.rainkavik.com/archives/254/">RainKavik</a></p>
<p>本文章只是一个Copy。</p>
<p>下载地址：<a href="https://cloud.rainkavik.com/s/oWqcx?password=u3xxfv">RainKavik-Drive</a> 解压密码均为：<code>rainkavik.com</code></p>
<p>2.8以上的版本需要打补丁,且只能windows游玩。</p>
<details class="toggle" ><summary class="toggle-button" style="">文件介绍</summary><div class="toggle-content"><p><code>./环境及工具</code> 下为安装环境所用文件或者工具<br><code>./服务端/&quot;version&quot;/full-grasscutter-x-xxx.zip</code> 服务端整合包，x 和 xxx 分别为分支和版本号<br><code>./服务端/&quot;version&quot;/up-grasscutter-x-xxx.zip</code> 服务端升级包，仅从此站的整合包相邻版本升级才可用<br><code>./辅助工具</code>简单化（指令）操作的工具<br><code>./视频教程</code>视频傻瓜式教程<br><code>./代理软件</code>用于在无法设置系统代理的 Windows 设备上设置代理<br><code>./Handbooks_FullLang_vx.x.x.zip</code>游戏内各物品 (全语言) 与 id 的对照表及生成脚本<br><code>./AlwaysTrustUserCerts.zip</code>用于信任用户证书的 Magisk 模块<br><code>./genshin-impact-patched.apk</code> 免 root和证书可玩私服的国际服客户端</p>
<p>服务端打包中 <code>full-grasscutter-xxx.zip</code> 为服务端整合包，<code>ota-grasscutter-xxx.zip</code>为升级包</p>
</div></details>

<h1 id="搭建服务端"><a href="#搭建服务端" class="headerlink" title="搭建服务端"></a>搭建服务端</h1><h2 id="windows服务端"><a href="#windows服务端" class="headerlink" title="windows服务端"></a>windows服务端</h2><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><details class="toggle" ><summary class="toggle-button" style="">下载安装包</summary><div class="toggle-content"><p><a href="https://www.python.org/downloads/">Python3.10</a><br>Python应该要 3.8以上<br><a href="https://www.mongodb.com/try/download/community">MongoDB</a> 数据库<br><a href="https://mitmproxy.org/">mitmproxy</a></p>
</div></details>]]></content>
      <tags>
        <tag>教程</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
</search>
